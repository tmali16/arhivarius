<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAFtxJREFUeF7N
        WwdUVVfWPvcVeHSkiAhIEBSRKp1H70pRBKNiLNi70SR2gyWKLfYWo05MjJNEk0l0MmOSP2WcxElMLxPT
        ZiYxOhrpgiLweHf/377vXSX+k7Vm/Wsh7LU+zrn33XvP3t/Ze59z7j2IrpV8FTrAHhW95bjYej6PS18g
        G5gAzLCiHMgB+gPWa2/DDpDuHPdIua0sK8rGW49Z8oOFyJ0K4w8B7wE/AjVAE9BsxXXruYvAR8AzAO7J
        90aJZyjEAUP5gT1JbhvO0FpKRWEvYJ4QKX9FeQvnCeX/B9dw72rASmoBUAL0CLltuAaKoucVw/vh+HGg
        2mLAUNUQkwX5HYAZ5+XfAP+Ga4byte3Wexkvw4tsAbQxEuh2UY3PQ68r7sm9vwj1WqvCgGIsGwPD8gE+
        l4MyE0gHUnGc3Bk4lwKkoZ4BZKOukNVqfeZigNsC4d0qnY1X6oGov2VVEsjn3oPybCwbkwAMQT0cGIz6
        ICDYioG3IUl36vjNem0ESiN7D4jI+xZAKDAJ3Saq8dwLCgmpwFUAyrLL5kLRVCgdi+NwIAT1EC4BNijU
        irD/gAiA7+G6ch2TAAzCM+NQ5t9EOz6WdrtFbhtvHZLyMoAbFuPzYDy77xCrAWGos0GRncDHnaEaazE4
        ZEAguTqxd/B5xu17QABfk9yG+McwyUOqgA73XBSjVeODAMQ7Z/csuCj3UCQQxSQA0TjPZDC4rkI9F0NC
        iiehTyVb1zSaOCOU8meWUm55Lvn0jVJ+lxQClGchjyj3YJgs6IX2FG26QXgM5t7P46yP4Y2Nz0TPx0LJ
        GIBJiMM5dn8uVbDhkYjxSNJookmrSQQySWc7jDRO4yglOZOKM9PouaeC6egrERRdUEo6pyLS6Nij+Lmx
        IJjbiP0Qz4IOUYo291iUXmfDuRxnMT4bxidAMUYijhNIIyXAUEYcjIwCONH5A/0BjmsmhLN/LlAEPEAp
        cYmUEhhPHS+60nfHvcgvqpiEbjSeWYDfE/n5cH1+ftJm1NF+YneMAgoBasmTG8RlCnrGCAXVIUwdzuDa
        ivtyPLPhfuTm2J9iAoNpdHIoLR8VTvumh9HziwfTa2vD6MzavjQhI5JyojJpRIyRjswLo7UVSZQali5r
        pGS0w6NAMjAkDHW0n9xd8c/I7YOy0TJGp0K5NC6haDoMzaaypEiKC4okY3A4LRoeSEfm+tLrq/vQuU29
        6WyVJ72y0o12T7Oj5WV6qsjUUnGMhmIDJcoM0+PeAEoJ8aKSBBt6aLi9/MdKZzknIgZehnDRJGMaze6f
        BuOZhHsuSuxziV7IQ1LiyUwGkAnDMWmRshUCvtzlR2c3udGBWc706P0GGptsoLgB9uTt7kj29i5wbVdc
        J/4jtJJACEmoGwAHkCtMBr0P2sg5K0SpC8iHDmk4nQTcc1E9IAuLk1wsXniSkwMlucyVDVIyRdg609QQ
        PUU6qUaxMVrFIDuDI/VycSVPdzey0WrQo4L0Gol0MFoHozUoJVxvo9OTg8GA4dDR7Ghvj9jn59hPEsIJ
        454zYn8ATnWLKLGPHhjC5dsAFOOxPxcEFJCXNkTOdhRyvE5Qup2gIBv0Jgx1dXAkJ3s7crCzVwjwcHOH
        8VoYi98VSEpdhV6rI4OtgRzsHWRcb0Idzxc/4lq2HiRg8tl9wgQoQyH8kEcBnvXlIDkVyv30gZTpAOOd
        JDkFZYGjoFx7NsiGXFw8ycvdg5wdncitFzwAvYyHKARwr1vIsJRajYbsrAS4OrvIbq692jWShq8fyxrg
        OlzWbaIMgVBAKWcAUCwHKGjvr+8ngwA5DcYbYXgZwuAhD4m2JnpQvK8LObt5U8B9geTv60e2NjYKAWy8
        hYQ7BHBpJYCcHBzNIKHN0cEROUdsBFjYEbpL1Dxwex0wDL1/AV5BITZexCGQDqSg90uAxX56+n56MP1t
        yiBanNmfBvj2pYCgEHiBh5Ls9AgF7nGus/EqDDa2bLzs7dlbHhQ0sD2ofxDpbWwmOdo7CJ0WWaN7pTMJ
        7AkP28ED5obZOFSj581JQCI8INsgaHl/A/3yUAT9a7mRvlueTu8+lEVLi+IoxK+P4gF3g72BS0dbe9nf
        19/s6xdg6tcvQPZ2dz/p5epq29vdHQHQ3fYropKQg4xEoqo35ng24iOAwmxFRwSSYKhW0ML+dlTzSBTV
        b86nnzeX0NeVxXR5xyS6sHMWPbv4AZo7MovShgwm/z69yd3ZmVzg9q6OjuTXpw+lREfKc4vSTLn+nrIT
        JgBuGDZCbHuG9VZRCBBhtvZSrEHnFGkQFyJshIylmnmAJOS+YGa0l55qF0dT7ZZh1HJoItXsm0JfbZxA
        3+2ZR7UnN1DzGwep7i/H6cd3TtJXb71Cn737Bv39o3N08fNzcvPHr5npnUPysqSBJo2LuzL2DdHz3x4m
        RgchXDRCG20rPomB229N6tfxWmkIHc/3pwOpnnR1WRw17hhOzQcnUOsz86np+DL68dAj9N2RFfTPE4/T
        z68fpV/ef5UaLnxAN/79D2qpuUy3Ln0r3/jszfaGE1vp2LjM3189sV188UylBIJ7niSCAJZAIc6sj/Mh
        Wl/UcWN1rnxzTSpdr4yl6g1p1LhnJN14chK1PDWHWk+uotY/baPaU9vp0ss76dKZI3Tl3Zfo2idvUu2F
        89Tww+fU/MOn5pZP32hrOrFVbtw5p/z65snixoFF2nBbS1s9ShLtBJK4EAM10t4XCgeZ29ePMFWvKzBX
        b8iWf6kyUt32bGrcV6p4QMvROdTywnJqPb2J2t9+klrfPU5N752g+g9OU+Nnb1LzN+/TrX9+Qu3/+Ehu
        /fB0e/Ozj1HD1mn314OAhh1zunP4+21JtbdMzXoJ8eBTOUFk3jiyvX7TcLl+2zCq3ZYu1+3Ilhv3jqDm
        Jx6gm7+bSbdeWkGtr22l1rcOUNu5Y2T6+BUyffkGdXxzljq+f59MQPuFs3Lr+VOm5t9vkOsfG1dQV1km
        GrZM7ZkEpCMECiN9RGZKSL+HBrnVt6wu7GjYOMJUv61Qrt2WKdduz6CGPUXUdGAMwmAytTw9n26dXkdt
        Z/dT+9+eobaPX6L2L/5M7V+/SSaQ0P7tX0HAO+bWj053NB9bQ7XLh6fULMwWDVUTei4BC8I9tRNi7hNG
        J/20F4sHU9v6YqrbVGCuezwHJKTJ9buGIgzKlDC4eWQmtTz7ELX+sQokPEFtIKH9o5PU/tkpEPEnMn1x
        Rm775LR86+wxc9OhxW01CzIGVU+NEfWrR/WkIfCOYOanSNUQb80T2YFiZYTH6I8nxXzZuDrXXFuVba7Z
        kirX7cyGFxRbvOBQhZIMbx1/hG6BhNa/IBTe/R21vf8stZ9/ntrOn6DWc8+aW17bR9d3zb5yOdfF/XKG
        o6hbVmRpqCcKJ+c9KQHi1dGD9C+WBInnRgTN+G5WHF2vyjXV7c4z1+3NprqdedS4t4SanigHCVMUElqO
        LUI4PIZ8sIfa3gYRZ5EYzx6WW9880HHzxfVyQ1X5e23nT2mad88RdSuGWxrrqUIrh4lT48J1z48J1bxU
        Hlb55pgQuXZFekfj3mK5bl8+1WxLp/rdwxAKI60kVCAcZoCIuXTr5dXUemYLkuM2ufX17fKt0xvbmw8v
        lOuW5u1r3DhWXN/ygKZ+ZQ8n4PSESPHeghTdBw8mi7dnJRx8b2Y8fVoRabq+IdfcsH84RoQMHhVAQgFI
        gCccGI2cMB6JkYmYTrf+sIJunVpLLS+vlm+eWGFq3DqOrk0OW3RllL+onh3frS8B/is5MwWJ6vAUqf7s
        HnFuUcbZixuK5U/nJnZ8OzNWbt5eTPUYCao3p1DtdpCwK1/JCTw/uA4img6Mpeanpso3X1oi33h+kbnp
        6Bxzzcrcm9cezhl8dfJgcW1ObM9MgKpIUrw4NSFGWh5gI+0bZXT7bNXQmrq95XStqtD84cw4+acFSdS8
        t4zqdhRQzaYUhEMa1e7IshJRiNwwQpkrND09RW46NtNUt62U/j0r/OXqx8pE7eYiTfWceGtLPU6UT1SQ
        OM3Z2TG2r4wZIM6MHZDxzWMjqOHJSebazcPlK+sL6Pz0GLr0SBrd2D+G6rYxCelU83ga1WxPU+YJtduz
        sGDiSdNQc/2B+01XFsWYL030j/253FtcqgjU1C5ItrbTYyRfGCMSxKTyCE3pUF4VxosjBYXiULrRe+eI
        2FM/bRkpNxyZ2lG9ucRcvS5fvvhoLr1fEUk/LUyhG3vGUsOuUqrdnAsiMqh6Y6pcXWWUr62JN/1SGS9f
        WRpHFyfd9+ilyQHiyqIo7aUHIy1N9gzhFyD8ziJfjMmJ0oy/P0o4OiQaPD1i04RIWA4irvV1jKavKoea
        G49MlWv2lMtXH82ma2vy6OKKTPpgchRdmBFHDVUl1LynnBq3l8qNW4bJTY9lytVLkujq3Gi6Mi1s3eUZ
        4eLytDDtt5E24ucpWGb1BCG2WzwATNfo9bnCwZAnSobH5sWFJnw6rYw/e2eQVsNfhOI7NhQkys1PjpNr
        D02Fq4/EirCAajcV0bUNhfTVohT6ZGo0/TDXKF9ZliP/tDjX/NU8Y/vVpZEvXF4SGfTLEiTT+claoqek
        KOElvl7szw13txSLD//ghnIusvEIlEUeQgw9zO8ClRej0lCT0CeaJJFkFiKF+jnH0Jer8qjh8GS59uAk
        DH9weRDBya1+exn9e+NwurAsW77wYIK8IinMbNBFdni5h34x0G/A+iCfgGhlcS3CmXSp+YW+4uh8X1bi
        3gu93Eesv7+/osi7p9zE0vnBYmeV3wOzZoT8q1cv/iIEww35JmHLX3B5U0QKaSQujfK4yFi5ZmcJ1WAB
        VHtgItXuQgIElHI3gBBo2l0mr8lPwvX8VTkJz+OdJHGtgV7BRzZO9Ao+uMBHXH/OR/vjUS8hiWCrVvdQ
        6EVX8XBBsJiUGiXWTxqkO7fRb/efDnnSyefd6a0/u7YNK4qWhS5GhtFQfBgTYCWB9/ck0Lr8BGrYOwok
        TKE6eELdgfFUv38C1e0fTzX7J8jNB8tp7TAjro2VtRr+CJrSLokUs7tTMS0tHXzt4knnws+fchI3T/aR
        JMUr7qnECXrVVry+vq9m29QEz30zBr6ydGQ4LZk9oO25Yx6m+fMGyl59QmWN4I+iyiYolGw454EckJBG
        Oime1g9LoGs7SqgOM77qg/CGgxUKuF6/f4w8K5E/rcfLWikF9/H3Rv7gOrRNiFkU4hPZGNyvd2JqpAdC
        7757ORmKU7DpwXjNtgUhYvLI+AOV48No78zglj2zB5jHjIqU/fx5z0+ajPiH0vytX9kvQEITi4DhYw4R
        ywapSTFxdH5JLl3fj+nv4Yl0/XAFNR2aSD+szaPBnrxfIJnQ83gOf2Rh8Kf26beEqEA99IgQEdAnWwNP
        UbS7B8INMQkZYD2mFxT6XohSJLqCjtK8BNkYz9/9jXBbToJsLH8h4hLHEgyyYyP4XBZJymdzI/k4xdJs
        Yzwdm5hGr8/Loj9MTaXSMN5JwvsJmCgu85hMgD1heIcQy+AN+X/HM7DozoY+iazcvRBXIFHSSsFIPhFP
        S2ICemiVSUizoVgxwEmPe1w1nEsGE4KYdkgkYcO7P/iTOYcDewMTYdk8YavnhMfg4yyAf+cQUL43WsFf
        nRcjFCajHjgBIQCd4u/FWyHueW6Ix9/gDCQ3KLDSJMQq9MYGWRLl1iSnEvAfIIWS6MX3qR6SA0/IIS3n
        CEMhyEH42EaRxoa3wIAAPe7RMUEqAewJmWhvGghYzPU/CjEb+nAodLkXsPvHw/UrUMb8jxAzoFAlCFgN
        RZaykig7G8xKd+45NhzDmSECJJSiDi+Q+HcYaldCwo17m6eTehIuqOuLcS1+1zOpnZ+ZhXYmIgwqUR9Z
        Da+EWyIalQ7qUuGlZwDKmDAoAQWWoidWQpm1wBSADWAFOxuvKt7ZgGAQgNh2vR91lAYY6lcGMuxwbPkI
        qtQ94BHeuEbJFZ2fxeEzBu1VQodJqPdH1/NcoEuXxsxuotbSUMgqJD40/Gi7xf25J9CDSpa+29jORLAX
        cJ0NCiDhO4JEP8RxEDK6bQzOWb4E65SvwiBAi3zhwr2vPle9n3NACbASYcC5Jwl5IB16xXZlHmACeP8N
        f4ob8g7CgHsA7l+JkmPxtwxXoRrA4PjnIS4IPY+E6MCZnhOeA+m0Enl5upGjgw+O+Vomq/Oz1ecUgPil
        6ICF3PZKIcqgV3pXe8BgIBLBFn9Nq5kDJR6FEmugwGzU2QDVUMbdBHT+Tf2dd3gGAmwkjwy9yc6goyER
        g8nZkTdFq/epPa9CeQbafRgELEZ95C7kI+g2pSs9gN2LCQgbAoXR+CpgnazRrIECEwEmoLOBKm4rfFdd
        hereiHcxkAy2Ogrw9yWtljdR8kjAxqvXqvdzyWHwIAhYgnr5USGw4lYWZF0mCSCAXz8ljMhI86fCYUaT
        wXYqPGADFBkLJX7tAZIEcNkJGpxj/F+D2EgmgCdRlo0QQvgCdxPQGTwSzLMSUHEcnYHbvgK6TJKQAHkr
        asLMV7fbydQuTN98LuTyslDSaHh4u7unOM4ZXFfBx2xUIdnoVOMZKgEBShIE06i7AJ2v+VUdxmeB/NlM
        AOrTTmAohm6/VzTtIkmCXrwROXrZ68vsqONvUjv9U8h0XVD/+7yhVAF6nQ3JJ60mlwZ4p1KgVybd55lD
        /b1yaJBvFiUMTKXciFgqjvWniqwgeAMTpxrFBPgBggx6PZIhb4hUJ1W/8gIYzGUGCJiOUeARlHOwJliA
        W+d3ZQiwB/B21Nj1ry6zJ/m8MMl/FfL3p6CwHScsNsBCQG+XHJqS6UBFMVoabbSlMcm2VGbUUUm8oKFR
        gkbEaWh8OghQPEc1jD2jj+IBzo7O5GjPcwIeKTpfo6wHUPKagLfhTgYBC3E8baRlNjinq3MA78NNqto3
        w5nkj4WJvhDy/BLe15eF3rzjolpNHoX3S6TogEga7BtCoX7BwCAaEhCBcwlYymZhzn93CLCh7oAg917u
        1NuDt83y6zQlD3CvW43n5JeNXje2CqxDEAKnkQBhOBMwnxXtKomDB+SgzNhYmNBXpq9F+xMPC7MkFciS
        xDM6np2xUaphbBB7xd1ggzgX8DWd3ZvrHPcC8wAvjAR9Sa8LgLH8MkXpdYCNz8TcIw0zQN4iP+INnHcG
        EbhtLjAH6DJhAngUCJ2t18VRSrg7ElABFFoHRXgWqPwXF0pLr6oZn/OCBOW5vHNONVi9Xi0dAUF9+3jL
        YSEDZRcnzgk8TLLhPPXm4ZdXhgnwgLgtCEkbfj+IEQNgAhhdJjzPHoSywhMKXbHE3kqQsALKjGIFcawY
        j7qaqDrjDjm/BvcsZ/VsrCaVvb/k29eH4qOHkI+3PzwsGYZzMuTlMfd63BmsRTD3V95LQKcSq15dajxL
        DDAFjS1DOTlRq5n7MzIvFOJV4Fh2SyAHynJvMThu/xuo16aZJaHH/cLk19fHlGY0yqGD1H+dS22B952E
        0VnwAlyirkvUlzOMLhdurBwoAgk85Mz2BvbAE2r4X1ssvcNzep7WKv8rAM/gsVoBjlVwqKjn+Rp2a/Ye
        fl9omQR5untQVHg4+fv6fJ2ZWbrKzuAzUCNxL7MORiRjnpVyON4TwzsLJxtedCyEAuxy84ByL4QAfoh7
        GrGJqVh8A0YKGMZvdfitLrsux21n8Dn+ja9h4ow3EMvwKNtzYPd3WknD6ZwttJk1a7zwcEdNZHKPA/es
        x39LONMqCQckzLPDOgB1HoJYKZ4p2vdBcspEyCyCwpigxLyNBVS1EBG1QCPq3+P8KWA/gHiKLsKiKNBy
        79N3/8OfrrJypl0vVzutJPg7YFcbLsT/Ahyh5W5RZcVbAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>